// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid()) @db.VarChar
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamp
  deletedAt DateTime? @map("deleted_at") @db.Timestamp

  phone        String? @unique @db.VarChar
  email        String? @unique @db.VarChar
  password     String? @db.VarChar
  oauth        Json    @default("{}") @db.JsonB
  profile      Json    @default("{}") @db.JsonB
  role         Json    @default("[]") @db.JsonB
  verification Json    @default("{}") @db.JsonB
  active       Boolean @default(false) @db.Boolean

  posts Post[]

  @@map("user")
}

model Post {
  id        String    @id @default(cuid()) @db.VarChar
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamp
  deletedAt DateTime? @map("deleted_at") @db.Timestamp
  publishAt DateTime? @map("publish_at") @db.Timestamp

  state    String? @db.VarChar
  title    String? @db.VarChar
  cover    String? @db.VarChar
  content  String? @db.Text
  location Json    @default("{}") @db.JsonB

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id") @db.VarChar

  @@map("post")
}
